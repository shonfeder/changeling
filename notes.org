#+TITLE: Design Notes

* Requirements

** (R1) HARMONIZE MERGING

Solve the changelog merge conflict problem

** (R2) PRIORITIZE HUMAN COMMUNICATION

Support the [[https://keepachangelog.com/en/1.0.0/][keep a changelog]] paradigm of human-to-human communication for the
focused on informing people about changes

   #+begin_quote
   To make it easier for users and contributors to see precisely what notable
   changes have been made between each release (or version) of the project.
   #+end_quote

** (R3) CUSTOMARY PRACTICE

Work seamless alongside the customary flat-file based changelog practice.

** (R4) AUTOMATE DEPLOYMENT

Support automated deployment via

- automating update of the =unreleased= section
- extraction of changes for a particular version

* Bonus functionality

** (B1) AUTOMATE LINKING AND DATING

- Support automated insertion of links to tag ranges and dates:

#+begin_src markdown
## [Unreleased]

## [1.0.0] - 2017-06-20
### Added

[Unreleased]: https://github.com/olivierlacan/keep-a-changelog/compare/v1.0.0...HEAD
[1.0.0]: https://github.com/olivierlacan/keep-a-changelog/compare/v0.3.0...v1.0.0
#+end_src

- Automated linking of issue ids
- Automated linking of user references

** (B2) LINTING

- Support configurable list of allowed change types
- Populate new unchanged with allowed kinds of changes

* Design

Basic ideas:

- Parse markdown changelog into document model
- Dump document model into markdown for normalizing and resolving merges
- Implement safe merge strategy of document model
  - Use this to provide a custom git merge driver

** Configuration

- [ ] Set changelog file (default: =CHANGES.md=)
- [ ] Configure allowed/default changes

** References

*** git merge drivers

- https://git-scm.com/docs/gitattributes#_defining_a_custom_merge_driver
- https://github.com/Praqma/git-merge-driver

* Tasks

** DONE Design a cannonical changelog document model
[[file:lib/model.ml][document model]]
** TODO Implement merge of document 2 model
** TODO =init= subcommand installs custom merge strategy for change log

#+begin_src markdown
To define a custom merge driver `filfre`, add a section to your `$GIT_DIR/config`
file (or `$HOME/.gitconfig` file) like this:

```
[merge "filfre"]
	name = feel-free merge driver
	driver = filfre %O %A %B %L %P
	recursive = binary
```

The merge.*.name variable gives the driver a human-readable name.
#+end_src

To configure the merge driver to run on a specific file, add it like so to the
project's =.gitattributes= file:

#+begin_src
CANGES.md merge=filfre
#+end_src

** TODO Populate unchanged with supported change kinds
** TODO =release V= to replace =unchanged= with version and date
Drop any empty change sections
** TODO =version V[..V']= subcommand extracts just the part of the changelog relevant for the version (range?)
** TODO Add =merge= subcommand for git mege drier

Must take arguments:

- =%O= :: old version
- =%A= :: current version
- =%B= :: new (other branches') version
- =%L= :: "conflict marker size"
- =%P= :: pathname where the merged result will be stored

#+begin_quote
The merge.*.driver variable’s value is used to construct a command to run to merge ancestor’s version (=%O=), current version (=%A=) and the other branches' version (=%B=). These three tokens are replaced with the names of temporary files that hold the contents of these versions when the command line is built. Additionally, =%L= will be replaced with the conflict marker size (see below).

The merge driver is expected to leave the result of the merge in the file named with =%A= by overwriting it, and exit with zero status if it managed to merge them cleanly, or non-zero if there were conflicts.
#+end_quote

https://git-scm.com/docs/gitattributes#_defining_a_custom_merge_driver
